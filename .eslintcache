[{"E:\\connected_object_client\\src\\index.js":"1","E:\\connected_object_client\\src\\reportWebVitals.js":"2","E:\\connected_object_client\\src\\App.js":"3","E:\\connected_object_client\\src\\NavBar.js":"4","E:\\connected_object_client\\src\\FireStore.js":"5","E:\\connected_object_client\\src\\Temperture.js":"6","E:\\connected_object_client\\src\\TemperatureTable.js":"7","E:\\connected_object_client\\src\\ToutesConsignes.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":1036,"mtime":1609734703541,"results":"12","hashOfConfig":"10"},{"size":924,"mtime":1609732970350,"results":"13","hashOfConfig":"10"},{"size":1063,"mtime":1609722699190,"results":"14","hashOfConfig":"10"},{"size":1653,"mtime":1609732223890,"results":"15","hashOfConfig":"10"},{"size":7400,"mtime":1609733540563,"results":"16","hashOfConfig":"10"},{"size":8059,"mtime":1609737312983,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1bt7sw3",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"E:\\connected_object_client\\src\\index.js",[],["37","38"],"E:\\connected_object_client\\src\\reportWebVitals.js",[],"E:\\connected_object_client\\src\\App.js",[],"E:\\connected_object_client\\src\\NavBar.js",["39","40","41","42"],"E:\\connected_object_client\\src\\FireStore.js",[],"E:\\connected_object_client\\src\\Temperture.js",["43"],"E:\\connected_object_client\\src\\TemperatureTable.js",["44","45","46","47","48","49","50","51","52"],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Table} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport {useState, useEffect, useRef} from 'react'\r\nimport './Table2.css'\r\nimport firebase from 'firebase'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nfunction App(props) {\r\n\r\n    const year=useRef(null)\r\n    const month=useRef(null)\r\n    const day=useRef(null)\r\n    const time=useRef(null)\r\n    const temp=useRef(null)\r\n \r\n    const [dataGlobal, setDataGlobal]=useState([])\r\n    const [dataCopie, setDataCopie]=useState([])\r\n    const [data,setData]=useState([])\r\n    const [selectedDate,setSelectedDate]=useState(null)\r\n    let [compteur, setCompteur]=useState(0)\r\n\r\n    function nextFunction(event){\r\n        if (compteur<dataGlobal.length){\r\n            setData(dataGlobal.slice(compteur,compteur+5))\r\n            setCompteur(compteur+5)\r\n        }\r\n    }\r\n    function previewFunction(event){\r\n        if(compteur>0){\r\n            setData(dataGlobal.slice(compteur-5,compteur))\r\n            setCompteur(compteur-5)\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n      firebase.firestore().collection(\"Chambre1\")\r\n      .onSnapshot((data)=>{\r\n        let tab=[]\r\n        data.forEach(e=>{\r\n          tab.push({id:e.id, data:e.data()})\r\n        })\r\n        tab=tab.sort(function(a,b){return b.data.date - a.data.date});\r\n        setDataGlobal(tab)\r\n        setDataCopie(tab)\r\n        setData(tab.splice(0,5))\r\n      })\r\n\r\n    },[])\r\n\r\n    function tempF(){\r\n      if(temp.current.value!=\"\"){\r\n        let tmpr=temp.current.value\r\n        console.log(dataCopie[0].data.temperature.toString())\r\n        console.log(tmpr)\r\n        let nouveau=dataCopie.filter(d=>d.data.temperature.toString().includes(tmpr))\r\n          setDataGlobal(nouveau)\r\n          setData(nouveau.splice(0,5))          \r\n      }else{\r\n        setDataGlobal(dataCopie)   \r\n        setData(dataCopie.splice(0,5))    \r\n      }\r\n    }\r\n    function timeF(){\r\n      if(time.current.value!=\"\"){\r\n        let tmpr=time.current.value\r\n        console.log(time.current.value)\r\n        console.log((new Date(dataCopie[0].data.date.seconds*1000)).toString().split('(')[0].split(\" \")[4])\r\n        let nouveau=dataCopie.filter(d=>(new Date(d.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[4].includes(tmpr))\r\n        setDataGlobal(nouveau)\r\n        setData(nouveau.splice(0,5))\r\n      }else{\r\n        setDataGlobal(dataCopie)   \r\n        setData(dataCopie.splice(0,5))    \r\n      }\r\n    }\r\n    function yearF(){\r\n      if(year.current.value!=\"\"){\r\n        let tmpr=year.current.value\r\n        console.log(year.current.value)\r\n        console.log((new Date(dataCopie[0].data.date.seconds*1000)).toString().split('(')[0].split(\" \")[3])\r\n        let nouveau=dataCopie.filter(d=>(new Date(d.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[3].includes(tmpr))\r\n        setDataGlobal(nouveau)\r\n        setData(nouveau.splice(0,5))\r\n      }else{\r\n        setDataGlobal(dataCopie)   \r\n        setData(dataCopie.splice(0,5))    \r\n      }\r\n    }\r\n    function monthF(){\r\n      if(month.current.value!=\"\"){\r\n        let tmpr=month.current.value\r\n        console.log(month.current.value)\r\n        console.log((new Date(dataCopie[0].data.date.seconds*1000)).toString().split('(')[0].split(\" \")[1])\r\n        let nouveau=dataCopie.filter(d=>(new Date(d.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[1].includes(tmpr))\r\n        setDataGlobal(nouveau)\r\n        setData(nouveau.splice(0,5))\r\n      }else{\r\n        setDataGlobal(dataCopie)   \r\n        setData(dataCopie.splice(0,5))    \r\n      }\r\n    }\r\n    function dayF(){\r\n      if(day.current.value!=\"\"){\r\n        let tmpr=day.current.value\r\n        let nouveau=dataCopie.filter(d=>((new Date(d.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[0]+\" \"+(new Date(d.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[2]).includes(tmpr))\r\n        setDataGlobal(nouveau)\r\n        setData(nouveau.splice(0,5))\r\n      }\r\n    }\r\n    useEffect(()=>{\r\n      if(selectedDate!=null){\r\n        let dateSplit=selectedDate.toString().split(\" \")\r\n        let day=dateSplit[0]+\" \"+dateSplit[2]\r\n        let month=dateSplit[1]\r\n        let year=dateSplit[3]\r\n       if(year!=\"\"){\r\n         let tmpr=year\r\n         let nouveau=dataCopie.filter(d=>((new Date(d.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[3])===tmpr)\r\n         setDataGlobal(nouveau)\r\n         setData(nouveau.splice(0,5))\r\n       }\r\n       if(month!=\"\"){\r\n        let tmpr=month\r\n        let nouveau=dataCopie.filter(d=>((new Date(d.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[1])===tmpr)\r\n        setDataGlobal(nouveau)\r\n        setData(nouveau.splice(0,5))\r\n      }\r\n      if(day!=\"\"){\r\n        let tmpr=day\r\n        let nouveau=dataCopie.filter(d=>((new Date(d.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[0]+\" \"+(new Date(d.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[2])===tmpr)\r\n        setDataGlobal(nouveau)\r\n        setData(nouveau.splice(0,5))\r\n      }\r\n      }\r\n    },[selectedDate])\r\n\r\n    return (\r\n      <div>\r\n        <br/><br/>\r\n        <DatePicker showYearDropdown scrollableMonthYearDropdown isClearable maxDate={new Date()} selected={selectedDate} onChange={d=>setSelectedDate(d)}></DatePicker>\r\n       <br/><br/>\r\n        <div style={{\r\n            alignContent:\"center\", \r\n            alignItems:\"center\",\r\n            marginBottom:\"18%\"}}>\r\n        <Table \r\n        responsive striped bordered hover variant=\"dark\"\r\n        style={{\r\n            position: \"fixes\",\r\n            alignContent: \"center\",\r\n            alignItems:\"center\",\r\n            alignSelf:\"center\",\r\n        }}\r\n        >\r\n        <thead>\r\n          <tr>\r\n            <th style={{color:\"blue\"}}>Jour</th>\r\n            <th style={{color:\"blue\"}}>Mois</th>\r\n            <th style={{color:\"blue\"}}>Année</th>\r\n            <th style={{color:\"blue\"}}>Heure</th>\r\n            <th style={{color:\"blue\"}}>Température</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td><input type=\"text\" ref={day} onChange={dayF}></input></td>\r\n            <td><input type=\"text\" ref={month} onChange={monthF}></input></td>\r\n            <td><input type=\"text\" ref={year} onChange={yearF}></input></td>\r\n            <td><input type=\"text\" ref={time} onChange={timeF}></input></td>\r\n            <td><input type=\"text\" ref={temp} onChange={tempF}></input></td>\r\n          </tr>\r\n{data !== null?data.map((val,key)=>(\r\n    <tr key={val.id}>\r\n        <td>{(new Date(val.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[0]+\" \"+\r\n        (new Date(val.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[2]}</td>\r\n        <td>{(new Date(val.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[1]}</td>\r\n        <td>{(new Date(val.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[3]}</td>\r\n        <td>{(new Date(val.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[4]}</td>\r\n        <td>{(val.data.temperature).toString()}</td>\r\n    </tr>\r\n)):null}\r\n        </tbody>\r\n      </Table>\r\n      <div>\r\n      <button className=\"b\" onClick={previewFunction}>preview</button>\r\n        <button className=\"b\" onClick={nextFunction}>next</button>\r\n      </div>\r\n      </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\connected_object_client\\src\\ToutesConsignes.js",["53","54","55","56","57","58","59","60","61"],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Table, Modal} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport {useState, useEffect, useRef} from 'react'\r\nimport './Table2.css'\r\nimport firebase from 'firebase'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nfunction App(props) {\r\n\r\n    const year=useRef(null)\r\n    const month=useRef(null)\r\n    const day=useRef(null)\r\n    const time=useRef(null)\r\n    const temp=useRef(null)\r\n \r\n    const [dataGlobal, setDataGlobal]=useState([])\r\n    const [dataCopie, setDataCopie]=useState([])\r\n    const [data,setData]=useState([])\r\n    const [selectedDate,setSelectedDate]=useState(null)\r\n    let [compteur, setCompteur]=useState(0)\r\n    const [stateShow, setStateShow]=useState(false)\r\n\r\n    function nextFunction(event){\r\n        if (compteur<dataGlobal.length){\r\n            setData(dataGlobal.slice(compteur,compteur+5))\r\n            setCompteur(compteur+5)\r\n        }\r\n    }\r\n    function previewFunction(event){\r\n        if(compteur>0){\r\n            setData(dataGlobal.slice(compteur-5,compteur))\r\n            setCompteur(compteur-5)\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n      firebase.firestore().collection(\"Souhaitable\")\r\n      .onSnapshot((data)=>{\r\n        let tab=[]\r\n        data.forEach(e=>{\r\n          tab.push({id:e.id, data:e.data()})\r\n        })\r\n        tab=tab.sort(function(a,b){return b.data.date - a.data.date});\r\n        setDataGlobal(tab)\r\n        setDataCopie(tab)\r\n        setData(tab.splice(0,5))\r\n      })\r\n\r\n    },[])\r\n\r\n    function tempF(){\r\n      if(temp.current.value!=\"\"){\r\n        let tmpr=temp.current.value\r\n        console.log(dataCopie[0].data.temperature.toString())\r\n        console.log(tmpr)\r\n        let nouveau=dataCopie.filter(d=>d.data.temperature.toString().includes(tmpr))\r\n          setDataGlobal(nouveau)\r\n          setData(nouveau.splice(0,5))          \r\n      }else{\r\n        setDataGlobal(dataCopie)   \r\n        setData(dataCopie.splice(0,5))    \r\n      }\r\n    }\r\n    function timeF(){\r\n      if(time.current.value!=\"\"){\r\n        let tmpr=time.current.value\r\n        console.log(time.current.value)\r\n        console.log((new Date(dataCopie[0].data.date.seconds*1000)).toString().split('(')[0].split(\" \")[4])\r\n        let nouveau=dataCopie.filter(d=>(new Date(d.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[4].includes(tmpr))\r\n        setDataGlobal(nouveau)\r\n        setData(nouveau.splice(0,5))\r\n      }else{\r\n        setDataGlobal(dataCopie)   \r\n        setData(dataCopie.splice(0,5))    \r\n      }\r\n    }\r\n    function yearF(){\r\n      if(year.current.value!=\"\"){\r\n        let tmpr=year.current.value\r\n        console.log(year.current.value)\r\n        console.log((new Date(dataCopie[0].data.date.seconds*1000)).toString().split('(')[0].split(\" \")[3])\r\n        let nouveau=dataCopie.filter(d=>(new Date(d.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[3].includes(tmpr))\r\n        setDataGlobal(nouveau)\r\n        setData(nouveau.splice(0,5))\r\n      }else{\r\n        setDataGlobal(dataCopie)   \r\n        setData(dataCopie.splice(0,5))    \r\n      }\r\n    }\r\n    function monthF(){\r\n      if(month.current.value!=\"\"){\r\n        let tmpr=month.current.value\r\n        console.log(month.current.value)\r\n        console.log((new Date(dataCopie[0].data.date.seconds*1000)).toString().split('(')[0].split(\" \")[1])\r\n        let nouveau=dataCopie.filter(d=>(new Date(d.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[1].includes(tmpr))\r\n        setDataGlobal(nouveau)\r\n        setData(nouveau.splice(0,5))\r\n      }else{\r\n        setDataGlobal(dataCopie)   \r\n        setData(dataCopie.splice(0,5))    \r\n      }\r\n    }\r\n    function dayF(){\r\n      if(day.current.value!=\"\"){\r\n        let tmpr=day.current.value\r\n        let nouveau=dataCopie.filter(d=>((new Date(d.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[0]+\" \"+(new Date(d.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[2]).includes(tmpr))\r\n        setDataGlobal(nouveau)\r\n        setData(nouveau.splice(0,5))\r\n      }\r\n    }\r\n    function detailF(e){\r\n       console.log(e.target.dataset.id)\r\n       setStateShow(true)\r\n    }\r\n    function setStateShowF(){\r\n        setStateShow(false)\r\n    }\r\n\r\n    useEffect(()=>{\r\n      if(selectedDate!=null){\r\n        let dateSplit=selectedDate.toString().split(\" \")\r\n        let day=dateSplit[0]+\" \"+dateSplit[2]\r\n        let month=dateSplit[1]\r\n        let year=dateSplit[3]\r\n       if(year!=\"\"){\r\n         let tmpr=year\r\n         let nouveau=dataCopie.filter(d=>((new Date(d.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[3])===tmpr)\r\n         setDataGlobal(nouveau)\r\n         setData(nouveau.splice(0,5))\r\n       }\r\n       if(month!=\"\"){\r\n        let tmpr=month\r\n        let nouveau=dataCopie.filter(d=>((new Date(d.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[1])===tmpr)\r\n        setDataGlobal(nouveau)\r\n        setData(nouveau.splice(0,5))\r\n      }\r\n      if(day!=\"\"){\r\n        let tmpr=day\r\n        let nouveau=dataCopie.filter(d=>((new Date(d.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[0]+\" \"+(new Date(d.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[2])===tmpr)\r\n        setDataGlobal(nouveau)\r\n        setData(nouveau.splice(0,5))\r\n      }\r\n      }\r\n    },[selectedDate])\r\n\r\n    return (\r\n      <div>\r\n        <br/><br/>\r\n        <DatePicker showYearDropdown scrollableMonthYearDropdown isClearable maxDate={new Date()} selected={selectedDate} onChange={d=>setSelectedDate(d)}></DatePicker>\r\n       <br/><br/>\r\n        <div style={{\r\n            alignContent:\"center\", \r\n            alignItems:\"center\",\r\n            marginBottom:\"18%\"}}>\r\n        <Table \r\n        responsive striped bordered hover variant=\"dark\"\r\n        style={{\r\n            position: \"fixes\",\r\n            alignContent: \"center\",\r\n            alignItems:\"center\",\r\n            alignSelf:\"center\",\r\n        }}\r\n        >\r\n        <thead>\r\n          <tr>\r\n            <th style={{color:\"blue\"}}>Jour</th>\r\n            <th style={{color:\"blue\"}}>Mois</th>\r\n            <th style={{color:\"blue\"}}>Année</th>\r\n            <th style={{color:\"blue\"}}>Heure</th>\r\n            <th style={{color:\"blue\"}}>Température souhaité </th>\r\n            <th style={{color:\"blue\"}}>Méssage</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td><input type=\"text\" ref={day} onChange={dayF}></input></td>\r\n            <td><input type=\"text\" ref={month} onChange={monthF}></input></td>\r\n            <td><input type=\"text\" ref={year} onChange={yearF}></input></td>\r\n            <td><input type=\"text\" ref={time} onChange={timeF}></input></td>\r\n            <td><input type=\"text\" ref={temp} onChange={tempF}></input></td>\r\n            <td><input type=\"text\" value=\"Message\"></input></td>\r\n          </tr>\r\n{data !== null?data.map((val,key)=>(\r\n    <React.Fragment>\r\n    <tr key={val.id}>\r\n        <td>{(new Date(val.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[0]+\" \"+\r\n        (new Date(val.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[2]}</td>\r\n        <td>{(new Date(val.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[1]}</td>\r\n        <td>{(new Date(val.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[3]}</td>\r\n        <td>{(new Date(val.data.date.seconds*1000)).toString().split('(')[0].split(\" \")[4]}</td>\r\n        <td>{(val.data.temperature).toString()}</td>\r\n        <td><button onClick={detailF} data-id={val.data.message}>voir méssage</button></td>\r\n    </tr>\r\n            <Modal  show={stateShow}>\r\n            {val.data.text}<br/>\r\n            <button onClick={setStateShowF}>Fermer</button>\r\n        </Modal>\r\n        </React.Fragment>\r\n)):null}\r\n        </tbody>\r\n      </Table>\r\n      <div>\r\n      <button className=\"b\" onClick={previewFunction}>preview</button>\r\n        <button className=\"b\" onClick={nextFunction}>next</button>\r\n      </div>\r\n      </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":18,"column":15,"nodeType":"68","endLine":18,"endColumn":71},{"ruleId":"66","severity":1,"message":"67","line":19,"column":15,"nodeType":"68","endLine":19,"endColumn":67},{"ruleId":"66","severity":1,"message":"67","line":20,"column":15,"nodeType":"68","endLine":20,"endColumn":67},{"ruleId":"66","severity":1,"message":"67","line":21,"column":15,"nodeType":"68","endLine":21,"endColumn":68},{"ruleId":"69","severity":1,"message":"70","line":19,"column":21,"nodeType":"71","messageId":"72","endLine":19,"endColumn":29},{"ruleId":"73","severity":1,"message":"74","line":53,"column":28,"nodeType":"75","messageId":"76","endLine":53,"endColumn":30},{"ruleId":"73","severity":1,"message":"74","line":66,"column":28,"nodeType":"75","messageId":"76","endLine":66,"endColumn":30},{"ruleId":"73","severity":1,"message":"74","line":79,"column":28,"nodeType":"75","messageId":"76","endLine":79,"endColumn":30},{"ruleId":"73","severity":1,"message":"74","line":92,"column":29,"nodeType":"75","messageId":"76","endLine":92,"endColumn":31},{"ruleId":"73","severity":1,"message":"74","line":105,"column":27,"nodeType":"75","messageId":"76","endLine":105,"endColumn":29},{"ruleId":"73","severity":1,"message":"74","line":118,"column":15,"nodeType":"75","messageId":"76","endLine":118,"endColumn":17},{"ruleId":"73","severity":1,"message":"74","line":124,"column":16,"nodeType":"75","messageId":"76","endLine":124,"endColumn":18},{"ruleId":"73","severity":1,"message":"74","line":130,"column":13,"nodeType":"75","messageId":"76","endLine":130,"endColumn":15},{"ruleId":"77","severity":1,"message":"78","line":137,"column":7,"nodeType":"79","endLine":137,"endColumn":21,"suggestions":"80"},{"ruleId":"73","severity":1,"message":"74","line":54,"column":28,"nodeType":"75","messageId":"76","endLine":54,"endColumn":30},{"ruleId":"73","severity":1,"message":"74","line":67,"column":28,"nodeType":"75","messageId":"76","endLine":67,"endColumn":30},{"ruleId":"73","severity":1,"message":"74","line":80,"column":28,"nodeType":"75","messageId":"76","endLine":80,"endColumn":30},{"ruleId":"73","severity":1,"message":"74","line":93,"column":29,"nodeType":"75","messageId":"76","endLine":93,"endColumn":31},{"ruleId":"73","severity":1,"message":"74","line":106,"column":27,"nodeType":"75","messageId":"76","endLine":106,"endColumn":29},{"ruleId":"73","severity":1,"message":"74","line":127,"column":15,"nodeType":"75","messageId":"76","endLine":127,"endColumn":17},{"ruleId":"73","severity":1,"message":"74","line":133,"column":16,"nodeType":"75","messageId":"76","endLine":133,"endColumn":18},{"ruleId":"73","severity":1,"message":"74","line":139,"column":13,"nodeType":"75","messageId":"76","endLine":139,"endColumn":15},{"ruleId":"77","severity":1,"message":"78","line":146,"column":7,"nodeType":"79","endLine":146,"endColumn":21,"suggestions":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dataCopie'. Either include it or remove the dependency array.","ArrayExpression",["84"],["85"],"no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"86","fix":"88"},"Update the dependencies array to be: [dataCopie, selectedDate]",{"range":"89","text":"90"},{"range":"91","text":"90"},[5114,5128],"[dataCopie, selectedDate]",[5347,5361]]